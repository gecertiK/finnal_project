version: "3.10"

services:
  shop: &shop
    container_name: shop
    build:
      context: .
      dockerfile: ./docker/shop/Dockerfile
    volumes:
      - ./shop:/app
    networks:
      - shop_network
      - nginx_network
    ports:
      - "8000:8000"
    depends_on:
      - db_shop
    environment:
      DB_NAME: "shop"
      DB_USER: "postgres"
      DB_PASSWORD: "postgres"
      DB_HOST: "db_shop"
      DB_PORT: "5432"
    restart: on-failure
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://0.0.0.0:8000/admin/login/"]
      interval: 1m
      timeout: 5s
      retries: 2

  store:
    container_name: store
    build:
      context: .
      dockerfile: docker/store/Dockerfile
    volumes:
      - ./store:/app
    networks:
      - store_network
      - nginx_network
    ports:
      - "8001:8000"
    expose:
      - 8000
    depends_on:
      - db_store
    environment:
      DB_NAME: "store"
      DB_USER: "postgres"
      DB_PASSWORD: "postgres"
      DB_HOST: "db_store"
      DB_PORT: "5432"
    restart: on-failure
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://0.0.0.0:8001/admin/login/"]
      interval: 1m
      timeout: 5s
      retries: 2

  db_shop:
    container_name: db_shop
    image: postgres:14-alpine
    volumes:
      - db_shop:/var/lib/postgresql/data
    networks:
      - shop_network
      - db_shop
    expose:
      - 5432
    restart: on-failure
    environment:
      POSTGRES_USER: 'postgres'
      POSTGRES_PASSWORD: 'postgres'
      POSTGRES_DB: 'shop'

  db_store:
    container_name: db_store
    image: postgres:14-alpine
    volumes:
      - db_store:/var/lib/postgresql/data
    networks:
      - store_network
      - db_store
    expose:
      - 5432
    restart: on-failure
    environment:
      POSTGRES_USER: 'postgres'
      POSTGRES_PASSWORD: 'postgres'
      POSTGRES_DB: 'store'

  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:latest
    networks:
      - shop_network
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    expose:
      - 4369
      - 5671
      - 5672
      - 15672
      - 25672
    ports:
      - "5672:5672"
    restart: on-failure
    healthcheck:
      test: [ "CMD", "nc", "-z", "localhost", "5672" ]
      interval: 5s
      timeout: 15s
      retries: 1

  redis:
    container_name: redis
    image: redis:alpine
    restart: on-failure
    networks:
      - shop_network
    expose:
      - 6379
    volumes:
      - redis:/var/lib/redis/data
    healthcheck:
      test: ["CMD", "redis-cli", "-h", "localhost", "ping"]

  celery:
    <<: *shop
    container_name: celery
    restart: on-failure
    depends_on:
      - redis
      - db_shop
      - db_store
    expose: []
    ports: []
    networks:
      - shop_network
      - db_shop
      - db_store
      - store_network
    environment:
      DB_NAME: "shop"
      DB_USER: "postgres"
      DB_PASSWORD: "postgres"
      DB_HOST: "db_shop"
      DB_PORT: "5432"
      C_FORCE_ROOT: 'true'
      CHECK_WEB: 'true'
    healthcheck:
      test: ["CMD-SHELL", "ps ax", "|" ,"grep -v grep", "|" ,"grep celery",  "||", "exit 1"]
      interval: 1m
      timeout: 5s
      retries: 2
    command: celery -A core worker -B -l INFO

  flower:
    image: mher/flower:0.9.5
    container_name: flower
    networks:
      - shop_network
      - nginx_network
    expose:
      - 5555
    depends_on:
      - celery
      - redis
      - db_shop
    command: [ "--app core", "--port=5555", "--url_prefix=flower", "--broker=amqp://rabbitmq:5672", "--broker_api=amqp://rabbitmq:15672//" ]

  mailhog:
    container_name: mailhog
    image: mailhog/mailhog:latest
    command: [ "-smtp-bind-addr", "0.0.0.0:25" ]
    user: root
    restart: on-failure
    networks:
      - shop_network
      - nginx_network
    expose:
      - 25
      - 8025
    healthcheck:
      test: [ "CMD", "echo", "|", "telnet", "127.0.0.1 25" ]
      interval: 10s
      timeout: 5s
      retries: 5

  nginx:
    container_name: nginx
    build:
      context: .
      dockerfile: ./docker/nginx/Dockerfile
    restart: on-failure
    networks:
      - nginx_network
    ports:
      - 80:80
      - 81:81
      - 8025:8025
      - 5555:5555
    depends_on:
      - mailhog
      - flower
      - shop
      - store
    healthcheck:
      test: [ "CMD-SHELL", "ps ax", "|" ,"grep -v grep", "|" ,"grep nginx",  "||", "exit 1" ]
      interval: 30s
      timeout: 10s
      retries: 3

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    volumes:
      - pgadmin:/var/lib/pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    networks:
      - db_shop
      - db_store
    restart: unless-stopped

networks:
  shop_network:
  store_network:
  db_shop:
  db_store:
  nginx_network:

volumes:
  db_shop:
  db_store:
  rabbitmq_data:
  redis:
  pgadmin:
